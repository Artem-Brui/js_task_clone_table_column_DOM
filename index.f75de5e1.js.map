{"mappings":"AAAA;AAEA,uBAAuB;AACvB,MAAM,QAAQ;IACZ,OAAO,SAAS,aAAa,CAAC;IAC9B,OAAO,SAAS,aAAa,CAAC;IAC9B,OAAO,SAAS,aAAa,CAAC;AAChC;AAEA,SAAS,kBAAkB,YAAY;IACrC,MAAM,OAAO,aAAa,QAAQ;IAElC,SAAS,UAAU,GAAG;QACpB,MAAM,cAAc,IAAI,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;QAE9C,MAAM,SAAS;eAAI,IAAI,QAAQ;SAAC,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;YACjD,OAAO,MAAM,IAAI;mBAAI;gBAAK;gBAAa;aAAI,GAAG;mBAAI;gBAAK;aAAI;QAC7D,GAAG,EAAE;QAEL,IAAI,SAAS,GAAG;QAChB,OAAO,OAAO,CAAC,CAAC,MAAQ,IAAI,WAAW,CAAC;QAExC,OAAO;IACT;IAEA,KAAK,MAAM,OAAO,KAChB,UAAU;AAEd;AAEA,kBAAkB,MAAM,KAAK;AAC7B,kBAAkB,MAAM,KAAK;AAC7B,kBAAkB,MAAM,KAAK","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write your code here\nconst table = {\n  thead: document.querySelector('thead'),\n  tbody: document.querySelector('tbody'),\n  tfoot: document.querySelector('tfoot'),\n};\n\nfunction mainCloneFunction(tableElement) {\n  const rows = tableElement.children;\n\n  function handleRow(row) {\n    const copyElement = row.children[1].cloneNode(true);\n\n    const newRow = [...row.children].reduce((acc, col, i) => {\n      return i === 4 ? [...acc, copyElement, col] : [...acc, col];\n    }, []);\n\n    row.innerHTML = '';\n    newRow.forEach((col) => row.appendChild(col));\n\n    return newRow;\n  }\n\n  for (const row of rows) {\n    handleRow(row);\n  }\n}\n\nmainCloneFunction(table.thead);\nmainCloneFunction(table.tbody);\nmainCloneFunction(table.tfoot);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}